@use 'sass:math';

/* 
    BASE LAYOUT CLASS
*/
.container-fluid {
    width: 100%;
    max-width: 1200px;
    margin: 0;
    padding: 0;
}

.container {
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
}

.row {
    display: flex;
    flex-flow: row wrap;
}

/* 
    GRID FOR ALL DEVICE
    WITH MIXIN MEDIA QUERY
*/
@include xs {
    @for $i from 1 through $grid-columns {
        .col-xs-#{$i} {
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}

@include sm {
    @for $i from 1 through $grid-columns {
        .col-sm-#{$i} {
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}

@include md {
    @for $i from 1 through $grid-columns {
        .col-md-#{$i} {
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}

@include lg {
    @for $i from 1 through $grid-columns {
        .col-lg-#{$i} {
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}

@include xl {
    @for $i from 1 through $grid-columns {
        .col-xl-#{$i} {
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}

/* 
    GAP GRID SYSTEM
*/
@each $key, $value in $grid-gaps {
    .gap-#{$key} > * {
        padding: $value;
    }

    .gap-#{$key} {
        margin-left: -$value;
        margin-right: -$value;
    }
}

/* 
    JUSTIFY CONTENT
    FLEXBOX CLASSES
*/
@each $value in $layout-flex {
    .justify-#{$value} {
        justify-content: $value;
    }
}
